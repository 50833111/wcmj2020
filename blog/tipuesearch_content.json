{"pages":[{"title":"About","text":"CMSimfly 內容管理網誌 課程倉儲: https://github.com/chiamingyen/cmsimfly 內容管理: https://chiamingyen.github.io/cmsimfly/ 課程投影片: https://chiamingyen.github.io/cmsimfly/reveal 課程網誌: https://chiamingyen.github.io/cmsimfly/blog","tags":"misc","url":"./pages/about/"},{"title":"2020 Fall CP 課程","text":"讓手機可以利用電腦熱點上網 採用 https://www.tp-link.com/us/home-networking/usb-adapter/tl-wn725n/ 將此一 USB Wifi adapter 連接電腦後, 若網路為 IPv4 協定時, 可以透過\"設定 -> 網路和網際網路 -> 行動熱點\", 選擇開啟並編輯\"網路名稱與網路密碼\"後, 讓至多 8 台手機透過熱點連線上網. 但是因為目前 Windows 10 並未提供 IPv6 網路協定下的網路熱點功能, 因此在純 IPv6 網路協定下無法使用\"行動熱點\"服務. 利用手機鏡頭當作 webcam: Android: https://www.digitalcitizen.life/turn-android-smartphone-webcam-windows iPhone: https://www.makeuseof.com/tag/use-your-iphone-as-a-webcam-heres-how-ios/ 需要 clone 個人倉儲時: git clone --recurse-submodules 倉儲_url.git 例如: git clone --recurse-submodules https://github.com/mdecourse/wcmj2020.git 現場直播的 audio 錄音設定 在電腦輔助設計室進行直播時, 由於現場有擴音設備, 因此採用 OBS 串流至 Youtube 的最佳收音並非從 Webcam 的麥克風, 而是從擴音器以 audio outpu 連接到電腦的麥克風插槽, 然後將 OBS 的 audio 設定為從電腦的麥克風收音.","tags":"Misc","url":"./2021-Fall-32-bit-Windows.html"},{"title":"2020 Fall CP 課程","text":"step 1 登入 gm 帳號後, 下載 https://drive.google.com/open?id=1SvMKQFViJ0mskt20UhSqkjzckB3noSJH 至 downloads 目錄, 然後以 7zip 解開到 C:\\wcmj2020 目錄下 step 2 解開後的目錄為 c:\\wcmj2020\\wcm2020, 其中有 start.bat 與 stop.bat, 開啟可攜系統時, 以滑鼠點擊 start.bat, 關閉可攜系統時, 以滑鼠點擊 stop.bat step 3 登入以個人學號所建立的 github 帳號, 然後建立 wcmj2020 倉儲. step 4 將遠端的 wcmj2020 以 git clone 取下. git clone https://github.com/學號/wcmj2020.git step 5 git submodule add https://github.com/mdecourse/cmsimde cmsimde step 6 進入 cmsimde 以 python wsgi.py 啟動動態系統 以瀏覽器 https://localhost:9443 可以利用 admin 為帳號登入管理 step 7 動態系統維護後, 利用 generate_pages 轉為靜態. step8 git config --global user.email your_gmail git config --global user.name your_student_no git config --global http.proxy http://[2001:288:6004:17::53]:3128 git add . git commit -m \"commit message\" git push","tags":"Misc","url":"./2020-Fall-32-bit-Windows.html"},{"title":"2020 Fall CP 課程","text":"W10-W12 將 https協定 連線改成 ssh協定 連線 利用 Editer leo 創建網誌 W10-W12 下載[putty]並利用putty建立private key及public key 利用shell指令將兩秒把key轉乘id_rsa 將id_rsa.pub抓出到編輯器並複製貼到github的ssh key上 將id_rsa經過puttygen.exe轉為putty接受的形式 將putty認可的key放到putty中 將.git的路config路徑改成ssh協定 將隨身系統的啟動程序設定路徑改成ssh協定 將.ssh資料夾下的config路徑設定改成ssh協定 W10-W12課程(Editer leo) 利用隨身系統的leo指定啟動Editer leo 利用Editer leo新增節點，編輯網誌並轉呈近端及遠端 Editer leo指令: Ctrl+I 新增一個新的節點 Delete 刪除節點 Ctrl+R 將節點往右(right)移動 Ctrl+L 將節點往左(left)移動 Ctrl+U 將節點往上(up)移動 Ctrl+D 將節點向下(down)移動","tags":"Misc","url":"./206-Fall-32-bit-Windows.html"},{"title":"2020 Fall CP 課程","text":"以 SSH 維護倉儲 W10 - W11 由於在電腦教室時採用純 IPv6 協定上網, 因此為了能夠在近端將倉儲改版資料推送到目前只接受 IPv4 協定連線的 github, 以下除了將原本以 https 對 github 連線, 改為以 ssh 協定連線外, 在 Windows 環境下必須利用 putty 與 plink, 設定 putty 格式的 .ppk 以及能夠同時支援 IPv4 與 IPv6 的代理主機. 設定步驟如下: 下載 Putty 工具組 從 https://www.chiark.greenend.org.uk/~sgtatham/putty/ 下載一般版, 或從 http://jakub.kotrla.net/putty/ 下載特殊的可攜版本. 利用 y:\\portablegit\\bin\\sh.exe 進入 shell 命令環境後, 以 1 ssh-keygen -t rsa -b 4096 -C \"使用者學號\" 在 /y/home/.ssh 目錄下建立 id_rsa 與 id_rsa.pub 等 private key 與 public key 之後以 SciTE 開啟 id_rsa.pub 後, 將此 public key 的內容, 以新增添加到 Github.com 帳號下 personal settings -> SSH and GPG keys 頁面下. 接下來要利用 puttygen.exe 將 id_rsa 轉為 Putty 可以解讀的 .ppk 格式, 並修改隨身系統的啟動批次檔案, 指定利用 putty 目錄下的 plink 執行 git 指令的網路代理設定. 1修改啟動的 start.bat 加入下列設定: 2 3set GIT_HOME=%Disk%:\\portablegit\\bin\\ 4set GIT_SSH=%Disk%:\\putty\\plink.exe 利用 puttygen.exe 載入第二步驟所建立的 private key, 也就是 id_rsa. 開啟 puttygen 之後, 以右下方的 load 載入 id_rsa, 成功載入後, 利用 save private key 按鈕, 將已經轉為 putty 格式的 .ppk 存檔. 此一 .ppk 檔案必須在設定 putty 中 github.com session 時, 在 Connection->SSH->Auth 項目下, 將轉檔後的 .ppk 指向 private key file for authentication 欄位. 並在 Connection->Proxy 項目下, 指定 Proxy type: HTTP, 並將 IPv6 代理主機設為 ::53 或 ::42 埠號設為 3128. 之後確定 home 下的 .ssh 目錄中的 config 設定檔案為: 1# no proxy at home 2#ProxyCommand y:/PortableGit/mingw64/bin/connect.exe -H proxy.mde.nfu.edu.tw:3128 %h %p 3# set git_ssh=y:/putty/plink.exe with auth under putty github.com session setup 4ProxyCommand y:/putty/plink.exe github.com %h %p 5 6Host github.com 7User git 8Port 22 9Hostname github.com 10 11# for connect.exe need openssh key format 12#IdentityFile \"y:\\home.ssh\\id_rsa_mdecourse\" 13 # for plink.exe need rsa key format but set under putty github.com session 14# plink.exe do not need the following setting 15#IdentityFile \"y:\\home.ssh\\mdecourse_putty_private.ppk\" 16 17TCPKeepAlive yes 18IdentitiesOnly yes 最後再將 wcmj2020 倉儲中 .git 目錄下的 config 檔案中的連線協定, 由 https 改為採 ssh 連線: 範例如下: 1[core] 2repositoryformatversion = 0 3filemode = false 4bare = false 5logallrefupdates = true 6symlinks = false 7ignorecase = true 8[submodule] 9active = . 10[remote \"origin\"] 11#url = https://github.com/mdecourse/wcmj2020.git 12url = git@github.com:mdecourse/wcmj2020.git 13 fetch = +refs/heads/ :refs/remotes/origin/ 14[branch \"master\"] 15remote = origin 16merge = refs/heads/master 17[submodule \"cmsimde\"] 18url = https://github.com/mdecourse/cmsimde.git 之後就可以透過近端的 .ppk private key 與 Github.com 上的 public key 對應, 無需輸入帳號密碼就可以進行 git push.","tags":"Misc","url":"./2019-Fall-32-bit-Windows.html"},{"title":"2018 Fall CP 課程","text":"2018 Fall 一開始, 在一台已經 10 年的 32 位元的 Windows 7 操作系統中工作. 可攜的 Python 3.7.0 仍然可以配置, Leo Editor、PyQt5、flask、Markdown、pelican 與 bs4 的安裝, 也都沒有問題. 只有 Eric6 因為缺少必要模組與 Python 3.7.0 對應的 pyqt5-tools, 因此沒有安裝. 電腦規格 目前系上已經沒有 32 位元 Windows 操作系統的電腦, 所以先前只要有學生提到所使用的電腦是舊型 32 位元的 Windows XP 或 Windows 7, 都無法提供相應的可攜程式系統. 但是, 當您桌上就只一台早期 Sony 推出的 VGC-LM26T 電腦, 採用 Intel core 2 Duo T8100 2.1 GHz 裝載 32 位元 Windows 7, 記憶體只有 2GB 的老舊電腦. 夠用嗎? 當然可以, 使用的是特別製作的 32 位元可攜系統 , 除了不支援 Eric6 之外, 其餘功能都與 64 位元的 p37 相同. 工作流程 從 2018 Fall 開始, 前半學期希望每位計算機程課程的學員, 都能透過 2018 計算機程式教材 內容, 深入學習 Python 3 各種程式語法, 利用 CMSimfly 、 Pelican 與 Reveal.js , 熟悉如何在 Github 配置自己的網站、網誌與網際簡報系統. 使用時, 啟動隨身系統的 start.bat, 利用命令列指令, git clone https://github.com/mdecourse/2018fall, 然後將內容配置在各自的 Github 帳號下. 程式專案 早在 1999 年, 就已經開始進行所謂 網際機械設計資源中心 的構建, 想像中的資源中心是一套網際專家系統, 包含各式機械設計流程中所需的模組, 全部依附在一個相對穩定, 可以持續改進的核心架構下, 類似 docassemble 的一套系統. 將近二十年過去, 網際機械設計資源中心 始終仍只有片段系統, 其中包含 CMSimfly 、 Pygrouf 與 Pyslvs ( Pyslvs 手冊 )等相關專案. 就如同 如何寫出有用的程式? 一文中所述, \"沒有興趣不要來念資工\" 是一句非常貼切的警語, 當學生對於程式設計提不起興趣, 沒有將所學的各式語法、資料結構與演算法, 套用在自己非常有興趣的領域中, 用來解決各式問題的話, 日復一日, 我們還是寫不出任何有用的程式! 早該起頭的重要工作 計算機程式的重要性 其實已經無需爭辯, 人類未來的許多工作都是透過網路與數位運算達成, 既知趨勢如此, 每一位工程師就該越早起頭原本就該進行的重要工作, 透過計算機程式來解決問題, 構築一個值得長期投注心力的程式專案.","tags":"Misc","url":"./2018-Fall-32-bit-Windows.html"}]}